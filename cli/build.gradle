plugins {
    id 'kotlin-platform-jvm'
    id 'application'
    id 'jacoco'
}

group 'org.rewedigital.voice'
version rootProject.ext.versions.cli

repositories {
    jcenter()
    mavenCentral()
    maven { url 'https://kotlin.bintray.com/kotlinx' }
}

dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'khttp:khttp:1.0.0'
    implementation 'com.google.apis:google-api-services-oauth2:v1-rev154-1.25.0'
    implementation 'io.ktor:ktor-client-okhttp:1.2.6'
    implementation 'io.ktor:ktor-client-json:1.2.6'
    implementation 'io.ktor:ktor-client-gson:1.2.6'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation project(':shared')
    testImplementation project(':shared')
    implementation project(':runtime-jvm')
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.jetbrains.kotlin:kotlin-test'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'
    testImplementation 'io.mockk:mockk:1.9.3'
}

sourceSets {
    main.java.srcDirs += 'src/main/kotlin/'
    test.java.srcDirs += 'src/test/kotlin/'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
    kotlinOptions.freeCompilerArgs += "-Xuse-experimental=kotlin.Experimental"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

task fatJar(type: Jar) {
    manifest.attributes 'Main-Class': 'org.rewedigital.konversation.Cli'
    archiveFileName = "konversation-fatjar.jar"
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude 'META-INF/*.RSA'
        exclude 'META-INF/*.SF'
        exclude 'META-INF/*.DSA'
        exclude 'META-INF/proguard/**'
        exclude 'META-INF/maven/**'
        exclude 'META-INF/LICENSE*'
        exclude 'META-INF/NOTICE*'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/services/**'
        exclude 'WEB-INF/proguard/**'
        exclude 'okhttp3/internal/publicsuffix/NOTICE'
        exclude '**/*.kotlin_metadata'
        exclude '**/*.kotlin_module'
        exclude '**/*.kotlin_builtins'
        exclude 'org/apache/commons/codec/language/*.txt'
        exclude 'org/apache/commons/codec/language/bm/*.txt'
    }
    with jar
}
mainClassName = 'org.rewedigital.konversation.Cli'
run.main = 'org.rewedigital.konversation.Cli'

jacocoTestReport.reports {
    xml.enabled true
    html.enabled true
}

task proguard() {
    doLast {
        proguard.Configuration configuration = new proguard.Configuration();
        // Parse the options specified in the command line arguments.
        String[] args = ["-injar",
                         "${project.buildDir}/libs/konversation-fatjar.jar",
                         "-outjar",
                         "${project.buildDir}/libs/konversation.jar",
                         "-libraryjars",
                         "${System.properties["java.home"]}/lib/rt.jar",
                         "@${project.projectDir}/src/main/minify.pro"];
        def parser = new proguard.ConfigurationParser(args, System.getProperties())
        try {
            parser.parse(configuration);
        }
        finally {
            parser.close();
        }

        // Execute ProGuard with these options.
        new proguard.ProGuard(configuration).execute();
    }
}
proguard.dependsOn("fatJar")

test.finalizedBy(jacocoTestReport)